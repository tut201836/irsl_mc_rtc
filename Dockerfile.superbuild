# ARG BASE_IMAGE
ARG BASE_IMAGE=ros:noetic-ros-base-focal
FROM ${BASE_IMAGE}
ARG CATKIN_SETUP_FILE

WORKDIR /
RUN apt update -q -qq && \
    apt install -y git build-essential  python3-catkin-tools && \
    apt clean && \
    rm -rf /var/lib/apt/lists/

RUN mkdir -p /workspace && cd /workspace && \
    git clone https://github.com/mc-rtc/mc-rtc-superbuild.git

COPY superbuild_extensions /workspace/mc-rtc-superbuild/extensions/
RUN apt update -q -qq && \
    apt install -y openssh-client && \
    apt clean && \
    rm -rf /var/lib/apt/lists/
RUN mkdir -p ~/.ssh && \
    ssh-keyscan github.com >> ~/.ssh/known_hosts
# RUN --mount=type=ssh \
#     git clone git@github.com:IRSL-tut/chidori-superbuild.git /workspace/mc-rtc-superbuild/extensions/chidori-superbuild
# RUN echo "set(CHIDORI_DIR \${CMAKE_CURRENT_LIST_DIR}/chidori-superbuild)" >>  /workspace/mc-rtc-superbuild/extensions/local.cmake && \
#     echo "include(\${CHIDORI_DIR}/chidori.cmake)" >>  /workspace/mc-rtc-superbuild/extensions/local.cmake

# HOTFIX
# RUN sed -i.bk 's/DEPENDS CHIDORI choreonoid/DEPENDS CHIDORI/g' /workspace/mc-rtc-superbuild/extensions/chidori-superbuild/chidori.cmake
# RUN echo "include(local.cmake)" >> /workspace/mc-rtc-superbuild/extensions/CMakeLists.txt

RUN --mount=type=ssh \
    apt update -q -qq && \
    bash -c 'source /opt/ros/noetic/setup.bash && \
    cd /workspace/mc-rtc-superbuild && \
    DEBIAN_FRONTEND=noninteractive ./utils/bootstrap-linux.sh ' \
    apt clean && \
    rm -rf /var/lib/apt/lists/

RUN --mount=type=ssh \
    apt update -q -qq && \
    bash -c 'source /opt/ros/noetic/setup.bash && \
    cd /workspace/mc-rtc-superbuild && \
    mkdir -p build && cd build && \
    DEBIAN_FRONTEND=noninteractive cmake ../ -DSOURCE_DESTINATION=/workspace/src/ -DBUILD_DESTINATION=/workspace/build -DCMAKE_INSTALL_PREFIX=/workspace/install -DCMAKE_BUILD_TYPE=RelWithDebInfo  && \
    git config --global user.name "GitHub Actions" && git config --global user.email "irsl@docker.com" '\
    apt clean && \
    rm -rf /var/lib/apt/lists/
    
RUN  --mount=type=ssh \
    apt update -q -qq && \
    bash -c 'source /opt/ros/noetic/setup.bash && \
    cd /workspace/mc-rtc-superbuild/build && \ 
    DEBIAN_FRONTEND=noninteractive cmake --build . --config RelWithDebInfo --target clone && \
    cmake --build . --config RelWithDebInfo' \
    apt clean && \
    rm -rf /var/lib/apt/lists/
   

RUN echo 'export PATH=/workspace/install/bin:$PATH' >> ~/.bashrc && \
    echo 'export PKG_CONFIG_PATH=/usr/local/lib/pkgconfig:$PKG_CONFIG_PATH' >> ~/.bashrc && \
    echo 'export LD_LIBRARY_PATH=/workspace/install/lib:$LD_LIBRARY_PATH' >> ~/.bashrc && \
    echo 'export PYTHONPATH=/usr/local/lib/python3.8/dist-packages:$PYTHONPATH' >> ~/.bashrc && \
    echo 'export ROS_PARALLEL_JOBS="-j8 -l8"' >> ~/.bashrc && \
    echo 'source /opt/ros/${ROS_DISTRO}/setup.bash' >> ~/.bashrc && \
    echo "source /workspace/src/catkin_ws/devel/setup.bash" >> ~/.bashrc
    
    