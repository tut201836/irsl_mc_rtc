ARG BASE_IMAGE
FROM ${BASE_IMAGE}
ARG CATKIN_SETUP_FILE

WORKDIR /
RUN apt update -q -qq && \
    apt install -y git build-essential && \
    apt clean && \
    rm -rf /var/lib/apt/lists/

RUN mkdir -p /mc_rtc_ws && cd /mc_rtc_ws && \
    git clone https://github.com/mc-rtc/mc-rtc-superbuild.git


COPY superbuild_extensions /mc_rtc_ws/mc-rtc-superbuild/extensions/
RUN apt update -q -qq && \
    apt install -y openssh-client && \
    apt clean && \
    rm -rf /var/lib/apt/lists/
RUN mkdir -p ~/.ssh && \
    ssh-keyscan github.com >> ~/.ssh/known_hosts
RUN --mount=type=ssh \
    git clone git@github.com:IRSL-tut/chidori-superbuild.git /mc_rtc_ws/mc-rtc-superbuild/extensions/chidori-superbuild
RUN echo "set(CHIDORI_DIR \${CMAKE_CURRENT_LIST_DIR}/chidori-superbuild)" >>  /mc_rtc_ws/mc-rtc-superbuild/extensions/local.cmake && \
    echo "include(\${CHIDORI_DIR}/chidori.cmake)" >>  /mc_rtc_ws/mc-rtc-superbuild/extensions/local.cmake

# HOTFIX
RUN sed -i.bk 's/DEPENDS CHIDORI choreonoid/DEPENDS CHIDORI/g' /mc_rtc_ws/mc-rtc-superbuild/extensions/chidori-superbuild/chidori.cmake
RUN echo "include(local.cmake)" >> /mc_rtc_ws/mc-rtc-superbuild/extensions/CMakeLists.txt

RUN --mount=type=ssh \
    apt update -q -qq && \
    bash -c 'source ${CATKIN_SETUP_FILE} && \
    cd /mc_rtc_ws/mc-rtc-superbuild && \
    DEBIAN_FRONTEND=noninteractive ./utils/bootstrap-linux.sh && \
    cd /mc_rtc_ws/mc-rtc-superbuild && \
    mkdir -p build && cd build && \
    DEBIAN_FRONTEND=noninteractive cmake ../ -DSOURCE_DESTINATION=/mc_rtc_ws/src/ -DBUILD_DESTINATION=/mc_rtc_ws/build -DCMAKE_INSTALL_PREFIX=/mc_rtc_ws/install -DCMAKE_BUILD_TYPE=RelWithDebInfo  && \
    git config --global user.name "GitHub Actions" && git config --global user.email "irsl@docker.com" && \
    cmake --build . --config RelWithDebInfo --target clone' && \
    apt clean && \
    rm -rf /var/lib/apt/lists/


    # cmake --build . --config RelWithDebInfo' && \



# RUN mkdir -p /mc_rtc_ws && cd /mc_rtc_ws && \
#     git clone https://github.com/mc-rtc/mc-rtc-superbuild.git && \
#     apt update -q -qq && \
#     bash -c 'source ${CATKIN_SETUP_FILE} && \
#     cd /mc_rtc_ws/mc-rtc-superbuild && \
#     DEBIAN_FRONTEND=noninteractive ./utils/bootstrap-linux.sh && \
#     cd /mc_rtc_ws/mc-rtc-superbuild && \
#     mkdir -p build && cd build && \
#     DEBIAN_FRONTEND=noninteractive cmake ../ -DSOURCE_DESTINATION=/mc_rtc_ws/src/ -DBUILD_DESTINATION=/mc_rtc_ws/build -DCMAKE_INSTALL_PREFIX=/mc_rtc_ws/install -DCMAKE_BUILD_TYPE=RelWithDebInfo  && \
#     git config --global user.name "GitHub Actions" && git config --global user.email "irsl@docker.com" && \
#     cmake --build . --config RelWithDebInfo --target clone && \
#     cmake --build . --config RelWithDebInfo' && \
#     apt clean && \
#     rm -rf /var/lib/apt/lists/

# RUN echo 'export PATH=/usr/local/bin:$PATH' >> ~/.bashrc && \
#     echo 'export PKG_CONFIG_PATH=/usr/local/lib/pkgconfig:$PKG_CONFIG_PATH' >> ~/.bashrc && \
#     echo 'export LD_LIBRARY_PATH=/mc_rtc_ws/install/lib:$LD_LIBRARY_PATH' >> ~/.bashrc && \
#     echo 'export PYTHONPATH=/usr/local/lib/python3.8/dist-packages:$PYTHONPATH' >> ~/.bashrc && \
#     echo 'export ROS_PARALLEL_JOBS="-j8 -l8"' >> ~/.bashrc && \
#     echo 'source /opt/ros/${ROS_DISTRO}/setup.bash' >> ~/.bashrc && \
#     echo "source /mc_rtc_ws/src/catkin_ws/devel/setup.bash" >> ~/.bashrc

# COPY superbuild_extensions /mc_rtc_ws/mc-rtc-superbuild/extensions/
# RUN apt update -q -qq && \
#     bash -c 'source ${CATKIN_SETUP_FILE} && \
#     cd /mc_rtc_ws/mc-rtc-superbuild/build && \
#     cmake --build . --config RelWithDebInfo --target self-update && \
#     cmake --build . --config RelWithDebInfo' 

# # RUN mkdir -p /mc_rtc_ws/src/openhrp/CHIDORI && \
# #     mkdir -p /mc_rtc_ws/src/catkin_data_ws/src/chidori_description && \
# #     mkdir -p /mc_rtc_ws/src/hrpcnoid_chidori && \
# #     mkdir -p /mc_rtc_ws/src/mc_chidori
# # COPY CHIDORI /mc_rtc_ws/src/openhrp/CHIDORI
# # COPY chidori_description /mc_rtc_ws/src/catkin_data_ws/src/chidori_description
# # COPY hrpcnoid_chidori /mc_rtc_ws/src/hrpcnoid_chidori
# # COPY mc_chidori /mc_rtc_ws/src/mc_chidori

# # RUN apt update -q -qq && \
# #     bash -c 'source ${CATKIN_SETUP_FILE} && \
# #     cd /mc_rtc_ws/mc-rtc-superbuild/build && \
# #     cmake --build . --config RelWithDebInfo' 

# # ここから下が動けば良い
# # GitHubにSSH接続するための設定
# RUN apt update -q -qq && \
#     apt install -y openssh-client && \
#     apt clean && \
#     rm -rf /var/lib/apt/lists/
# RUN mkdir -p ~/.ssh && \
#     ssh-keyscan github.com >> ~/.ssh/known_hosts
# RUN --mount=type=ssh \
#     git clone git@github.com:IRSL-tut/chidori-superbuild.git /mc_rtc_ws/mc-rtc-superbuild/extensions/chidori-superbuild
# #ここまでは動く

# # COPY chidori /mc_rtc_ws/mc-rtc-superbuild/extensions/
# RUN echo "set(CHIDORI_DIR \${CMAKE_CURRENT_LIST_DIR}/chidori-superbuild)" >>  /mc_rtc_ws/mc-rtc-superbuild/extensions/local.cmake
# RUN echo "include(\${CHIDORI_DIR}/chidori.cmake)" >>  /mc_rtc_ws/mc-rtc-superbuild/extensions/local.cmake

# WORKDIR /mc_rtc_ws/mc-rtc-superbuild/build
# # RUN --mount=type=ssh \
# #     apt update -q -qq && \
# #     bash -c 'source ${CATKIN_SETUP_FILE} && \
# #     cd /mc_rtc_ws/mc-rtc-superbuild/build && \
# #     cmake --build . --config RelWithDebInfo --target self-update && \
# #     cmake --build . --config RelWithDebInfo' 
# #このタイミングのPrivateリポジトリのGit cloneでエラーが出る